// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`arrow.js 1`] = `
"=====Parsetree==========================================
external add_nat : nat -> int = \\"add_nat_bytecode\\" \\"add_nat_native\\"
=====Errors=============================================

File \\"/napkinscript/tests/parsing/errors/typexpr/arrow.js\\", line 2, characters 21-24:


1 â”‚  // notice usage of -> instead of =>
[31m2[0m â”‚  external add_nat: nat -> int = \\"add_nat_bytecode\\" \\"add_nat_native\\"          
                           [31m^^[0m

Did you forget a \`=>\` here? 



========================================================"
`;

exports[`typeConstructorArgs.js 1`] = `
"=====Parsetree==========================================
type nonrec 'a node = {
  _value: 'a Js.Nullable.value }
type nonrec 'a t = 'a Belt.Map.t
type nonrec 'a t = private 'a Belt.Map.t
=====Errors=============================================

File \\"/napkinscript/tests/parsing/errors/typexpr/typeConstructorArgs.js\\", line 2, characters 27-28:


1 â”‚  type node<'a> = {
[31m2[0m â”‚    _value: Js.Nullable.value[31m([0m'a)
3 â”‚  }
4 â”‚  

Type constructor args require diamonds, like: Belt.Map.String.t<int>


File \\"/napkinscript/tests/parsing/errors/typexpr/typeConstructorArgs.js\\", line 5, characters 23-24:


3 â”‚  }
4 â”‚  
[31m5[0m â”‚  type t<'a> = Belt.Map.t[31m([0m'a)
6 â”‚  type t<'a> = private Belt.Map.t('a)

Type constructor args require diamonds, like: Belt.Map.String.t<int>


File \\"/napkinscript/tests/parsing/errors/typexpr/typeConstructorArgs.js\\", line 6, characters 31-32:


4 â”‚  
5 â”‚  type t<'a> = Belt.Map.t('a)
[31m6[0m â”‚  type t<'a> = private Belt.Map.t[31m([0m'a)

Type constructor args require diamonds, like: Belt.Map.String.t<int>



========================================================"
`;
