// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`letBinding.js 1`] = `
"=====Parsetree==========================================
let rightResource =
  (ur.resources).find
    (fun r -> r.account_id == ((connection.left).account).id)
let x = let field = p |. parseFieldDeclaration in field
let t = let (_, _, token) = scanner |. scan in token
let (keyTable : int Belt.Map.String.t) = [%napkinscript.exprhole ]
let foo = [%napkinscript.exprhole ]
=====Errors=============================================

File \\"/napkinscript/tests/parsing/errors/structure/letBinding.js\\", line: 2, characters 17-20:


1 â”‚  // missing =
[31m2[0m â”‚  let rightResource ur.resources.find(          
                       [31m^[0m
3 â”‚    r => r.account_id === connection.left.account.id
4 â”‚  )

Did you forget a \`=\` here? 


File \\"/napkinscript/tests/parsing/errors/structure/letBinding.js\\", line: 8, characters 11-13:


6 â”‚  let x = {
7 â”‚    // missing =
[31m8[0m â”‚    let field p->parseFieldDeclaration           
                 [31m^[0m
9 â”‚    field
10 â”‚  }

Did you forget a \`=\` here? 


File \\"/napkinscript/tests/parsing/errors/structure/letBinding.js\\", line: 14, characters 18-26:


12 â”‚  let t = {
13 â”‚  	// missing =
[31m14[0m â”‚  	let /_, _, token/ scanner->scan          
                        [31m^[0m
15 â”‚    token
16 â”‚  }

Did you forget a \`=\` here? 


File \\"/napkinscript/tests/parsing/errors/structure/letBinding.js\\", line: 18, characters 38-43:


16 â”‚  }
17 â”‚  
[31m18[0m â”‚  let keyTable: Belt.Map.String.t<int> =
19 â”‚  
20 â”‚  let foo = 

This let-binding misses an expression


File \\"/napkinscript/tests/parsing/errors/structure/letBinding.js\\", line: 20, characters 9-11:


18 â”‚  let keyTable: Belt.Map.String.t<int> =
19 â”‚  
[31m20[0m â”‚  let foo =[31m[0m 

This let-binding misses an expression



========================================================"
`;
